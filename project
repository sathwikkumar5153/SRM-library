#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<string.h>

struct library
{
char bk_name[30];
char author[30];
char row[30];
char column[30];
int pages;
float price;
};

int main()
{
struct library l[100];
char ar_nm[30],bk_nm[30],row[30],column[30];
int i,j, keepcount;
i=j=keepcount = 0;
char name[30]; 
printf("Enter your name (in block letters):");
scanf("%s",name);
while(j!=6)
{
 printf("\n\n**######""  WELCOME to %s's PERSONAL BOOK MANAGEMENT SYSTEM  ""#####**\n",name);
printf("1. Add book information\n");
printf("2. Display book information\n");
printf("3. List all books of given author\n");
printf("4. Display the location of the specified book\n");
printf("5. List the count of books in personal library\n");
printf("6. Exit");

printf ("\n\nEnter one of the above : ");
scanf("%d",&j);

switch (j)
{

case 1:  
printf ("Enter book name = ");
fflush(stdin);
gets(l[i].bk_name);
fflush(stdin);
printf ("Enter author name = ");
fflush(stdin);
gets(l[i].author);
fflush(stdin);
printf ("Enter pages = ");
scanf ("%d",&l[i].pages);
printf ("Enter price = ");
scanf ("%f",&l[i].price);
printf ("Enter the row number = ");
scanf ("%s",l[i].row);
printf ("Enter the column number = ");
scanf ("%s",l[i].column);
keepcount++;
break;

case 2:
printf("\nYou have entered the following information\n");
for(i=0; i<keepcount; i++)
{
printf ("\nbook name = %s",l[i].bk_name);
printf ("\t author name = %s",l[i].author);
printf ("\t  pages = %d",l[i].pages);
printf ("\t\t price = %.2f",l[i].price);
}
break;

case 3:
printf ("Enter author name : ");
fflush(stdin);
gets(ar_nm);
for (i=0; i<keepcount; i++)
{
if (strcmp(ar_nm, l[i].author) == 0)
printf ("\nBook name:%s \t Author: %s\n",l[i].bk_name,l[i].author);
}
break;

case 4:
printf ("Enter book name : ");

fflush(stdin);
gets(bk_nm);
for (i=0; i<keepcount; i++)
{
if (strcmp(bk_nm, l[i].bk_name) == 0)
printf ("Book name: %s \n Row number: %s \n Column number :%s ",l[i].bk_name,l[i].row,l[i].column);
}
break;

case 5:
printf("\n No of books in library : %d", keepcount);
break;
  
case 6:
exit (0); 
}
}
return 0;
}
